Name: init
Extension: false
Callbacks: []
Enums: []
Errors: []
Values: []
Flags:
  - Name: Flags
    Type: SDL_InitFlags
    Comment: "Used for initializing a subsystem."
    Values:
      - Name: audio
        Type: SDL_INIT_AUDIO
        Value: false
        Comment: null
      - Name: video
        Type: SDL_INIT_VIDEO
        Value: false
        Comment: null
      - Name: joystick
        Type: SDL_INIT_JOYSTICK
        Value: false
        Comment: null
      - Name: haptic
        Type: SDL_INIT_HAPTIC
        Value: false
        Comment: null
      - Name: gamepad
        Type: SDL_INIT_GAMEPAD
        Value: false
        Comment: null
      - Name: events
        Type: SDL_INIT_EVENTS
        Value: false
        Comment: null
      - Name: sensor
        Type: SDL_INIT_SENSOR
        Value: false
        Comment: null
      - Name: camera
        Type: SDL_INIT_CAMERA
        Value: false
        Comment: null
    Presets:
      - Name: everything
        Comment: "Initializes all subsystems."
        Values:
          - Name: audio
            Value: true
          - Name: video
            Value: true
          - Name: joystick
            Value: true
          - Name: haptic
            Value: true
          - Name: gamepad
            Value: true
          - Name: events
            Value: true
          - Name: sensor
            Value: true
          - Name: camera
            Value: true
    Functions: []
    CustomFunctions: []
StringMap:
  - SdlName: SDL_AppMetadataProperty
    ZigName: AppMetadataProperty
    Comment: "An app's metadata property to get or set."
    Values:
      - ZigValue: Name
        SdlValue: SDL_PROP_APP_METADATA_NAME_STRING
        Comment: null
      - ZigValue: Version
        SdlValue: SDL_PROP_APP_METADATA_VERSION_STRING
        Comment: null
      - ZigValue: Identifier
        SdlValue: SDL_PROP_APP_METADATA_IDENTIFIER_STRING
        Comment: null
      - ZigValue: Creator
        SdlValue: SDL_PROP_APP_METADATA_CREATOR_STRING
        Comment: null
      - ZigValue: Copyright
        SdlValue: SDL_PROP_APP_METADATA_COPYRIGHT_STRING
        Comment: null
      - ZigValue: Url
        SdlValue: SDL_PROP_APP_METADATA_URL_STRING
        Comment: null
      - ZigValue: Type
        SdlValue: SDL_PROP_APP_METADATA_TYPE_STRING
        Comment: null
Structs: []
Functions:
  - SdlName: SDL_Init
    ZigName: init
    Comment: "Initialize the SDL systems. Each system is ref-counted so init and quit each one, then call shutdown."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: flags
        Type: SDL_InitFlags
        Value: null
        Mode: null
  - SdlName: SDL_QuitSubSystem
    ZigName: quit
    Comment: "Quit SDL systems. Note that shutdown is still needed after all systems have been quit."
    Return:
      Sdl: void
      Zig: void
      Convert: null
      Checks: []
    Arguments:
      - Name: flags
        Type: SDL_InitFlags
        Value: null
        Mode: null
  - SdlName: SDL_Quit
    ZigName: shutdown
    Comment: "Shutdown SDL. This is needed. Each system is ref-counted so init and quit each one, then call this."
    Return:
      Sdl: void
      Zig: void
      Convert: null
      Checks: []
    Arguments: []
  - SdlName: SDL_WasInit
    ZigName: wasInit
    Comment: "Get which given systems have been initialized."
    Return:
      Sdl: SDL_InitFlags
      Zig: Flags
      Convert: null
      Checks: []
    Arguments:
      - Name: flags
        Type: SDL_InitFlags
        Value: null
        Mode: null
  - SdlName: SDL_SetAppMetadata
    ZigName: setAppMetadata
    Comment: "Get which given systems have been initialized."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: app_name
        Type: "?string"
        Value: null
        Mode: null
      - Name: app_version
        Type: "?string"
        Value: null
        Mode: null
      - Name: app_identifier
        Type: "?string"
        Value: null
        Mode: null
  - SdlName: SDL_SetAppMetadataProperty
    ZigName: setAppMetadataProperty
    Comment: "Set a metadata property for the app. Note that the value can be null to clear it."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: property
        Type: SDL_AppMetadataProperty
        Value: null
        Mode: null
      - Name: value
        Type: "?string"
        Value: null
        Mode: null
  - SdlName: SDL_GetAppMetadataProperty
    ZigName: getAppMetadataProperty
    Comment: "Get a metadata property for the app."
    Return:
      Sdl: string
      Zig: "?[]const u8"
      Convert: null
      Checks:
        - Method: ReturnNullIfEq
          ComparisonVal: null
    Arguments:
      - Name: property
        Type: SDL_AppMetadataProperty
        Value: null
        Mode: null
CustomFunctions: []
Typedefs: []
Tests:
  - Name: Init
    Comment: Ensure initialization and shutdown works as expected. Also app properties for some reason.
    Code: |
      defer shutdown();
      const flags = Flags{
          .video = true,
          .events = true,
          .camera = true,
      };
      try setAppMetadata("SDL3 Test", null, "!Testing");
      try init(flags);
      defer quit(flags);
      try std.testing.expect(std.meta.eql(flags, wasInit(flags)));
      try std.testing.expect(std.mem.eql(u8, getAppMetadataProperty(.Name).?, "SDL3 Test"));
      try std.testing.expect(getAppMetadataProperty(.Version) == null);
      try std.testing.expect(std.mem.eql(u8, getAppMetadataProperty(.Identifier).?, "!Testing"));
      try setAppMetadataProperty(.Creator, "Gota7");
      try std.testing.expect(std.mem.eql(u8, getAppMetadataProperty(.Creator).?, "Gota7"));
      try setAppMetadataProperty(.Creator, null);
      try std.testing.expect(getAppMetadataProperty(.Creator) == null);
      try std.testing.expect(getAppMetadataProperty(.Url) == null);
