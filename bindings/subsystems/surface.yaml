Name: surface
Callbacks: []
Enums:
  - SdlType: SDL_ScaleMode
    ZigType: ScaleMode
    InternalType: c_uint
    Comment: "The scaling mode."
    Values:
      - ZigValue: Nearest
        SdlValue: $SDL.SDL_SCALEMODE_NEAREST
        Comment: "Nearest pixel sampling."
      - ZigValue: Linear
        SdlValue: $SDL.SDL_SCALEMODE_LINEAR
        Comment: "Linear pixel sampling."
    Functions:
      - SdlName: SDL_ConvertPixels
        ZigName: convertPixels
        Comment: "Copy a block of pixels of one format to another format."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: width
            Type: u31
            Value: null
            Mode: null
          - Name: height
            Type: u31
            Value: null
            Mode: null
          - Name: src_format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: src
            Type: "[]const u8"
            Value: src.ptr
            Mode: verbatim
          - Name: src_pitch
            Type: null
            Value: "@intCast(src.len / height)"
            Mode: null
          - Name: dst_format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: dst
            Type: "[]const u8"
            Value: dst.ptr
            Mode: verbatim
          - Name: dst_pitch
            Type: null
            Value: "@intCast(dst.len / height)"
            Mode: null
      - SdlName: SDL_ConvertPixelsAndColorspace
        ZigName: convertPixelsAndColorspace
        Comment: "Copy a block of pixels of one format and colorspace to another format and colorspace."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: width
            Type: u31
            Value: null
            Mode: null
          - Name: height
            Type: u31
            Value: null
            Mode: null
          - Name: src_format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: src_colorspace
            Type: SDL_Colorspace
            Value: null
            Mode: null
          - Name: src_properties
            Type: SDL_PropertiesID
            Value: null
            Mode: null
          - Name: src
            Type: "[]const u8"
            Value: src.ptr
            Mode: verbatim
          - Name: src_pitch
            Type: null
            Value: "@intCast(src.len / height)"
            Mode: null
          - Name: dst_format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: dst_colorspace
            Type: SDL_Colorspace
            Value: null
            Mode: null
          - Name: dst_properties
            Type: SDL_PropertiesID
            Value: null
            Mode: null
          - Name: dst
            Type: "[]const u8"
            Value: dst.ptr
            Mode: verbatim
          - Name: dst_pitch
            Type: null
            Value: "@intCast(dst.len / height)"
            Mode: null
      - SdlName: SDL_PremultiplyAlpha
        ZigName: premultiplyAlpha
        Comment: "Premultiply the alpha on a block of pixels."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: width
            Type: u31
            Value: null
            Mode: null
          - Name: height
            Type: u31
            Value: null
            Mode: null
          - Name: src_format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: src
            Type: "[]const u8"
            Value: src.ptr
            Mode: verbatim
          - Name: src_pitch
            Type: null
            Value: "@intCast(src.len / height)"
            Mode: null
          - Name: dst_format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: dst
            Type: "[]const u8"
            Value: dst.ptr
            Mode: verbatim
          - Name: dst_pitch
            Type: null
            Value: "@intCast(dst.len / height)"
            Mode: null
          - Name: linear
            Type: bool
            Value: null
            Mode: null
  - SdlType: SDL_FlipMode
    ZigType: FlipMode
    InternalType: c_uint
    Comment: "The flipping mode."
    Values:
      - ZigValue: Horizontal
        SdlValue: $SDL.SDL_FLIP_HORIZONTAL
        Comment: "Flip horizontally."
      - ZigValue: Vertical
        SdlValue: $SDL.SDL_FLIP_VERTICAL
        Comment: "Flip vertically."
    Functions: []
Errors: []
Values:
  - SdlName: SDL_Surface
    ZigName: Surface
    Type: *$SDL.SDL_Surface
    IsOpaque: false
    Comment: "A collection of pixels used in software blitting."
    Presets: []
    Functions:
      - SdlName: SDL_CreateSurface
        ZigName: init
        Comment: "Allocate a new surface with a specific pixel format."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Method: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: width
            Type: u31
            Value: null
            Mode: null
          - Name: height
            Type: u31
            Value: null
            Mode: null
          - Name: format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
      - SdlName: SDL_CreateSurfaceFrom
        ZigName: initFrom
        Comment: "Allocate a new surface with a specific pixel format and data in the format."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Method: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: width
            Type: u31
            Value: null
            Mode: null
          - Name: height
            Type: u31
            Value: null
            Mode: null
          - Name: format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: pixel_data
            Type: "[]const u8"
            Value: pixel_data.ptr
            Mode: verbatim
          - Name: pitch
            Type: null
            Value: "@intCast(pixel_data.len / height)"
            Mode: null
      - SdlName: SDL_DestroySurface
        ZigName: deinit
        Comment: "Free a surface."
        Return:
          Sdl: void
          Zig: void
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_GetSurfaceProperties
        ZigName: getProperties
        Comment: "Get the properties associated with a surface."
        Return:
          Sdl: SDL_PropertiesID
          Zig: "!properties.Group"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: 0
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
# TODO: PROPERTIES!!!
      - SdlName: SDL_SetSurfaceColorspace
        ZigName: setColorspace
        Comment: "Set the colorspace used by a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: colorspace
            Type: SDL_Colorspace
            Value: null
            Mode: null
      - SdlName: SDL_GetSurfaceColorspace
        ZigName: getColorspace
        Comment: "Get the colorspace used by a surface."
        Return:
          Sdl: SDL_Colorspace
          Zig: "?pixels.Colorspace"
          Convert: null
          Checks:
            - Mode: ReturnNullIfEq
              ComparisonVal: $SDL.SDL_COLORSPACE_UNKNOWN
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_CreateSurfacePalette
        ZigName: createPalette
        Comment: "Create a palette and associate it with a surface. Returned palette does not need to be freed."
        Return:
          Sdl: SDL_Palette
          Zig: "!pixels.Palette"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_SetSurfacePalette
        ZigName: setPalette
        Comment: "Set the palette used by a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: palette
            Type: SDL_Palette
            Value: null
            Mode: null
      - SdlName: SDL_GetSurfacePalette
        ZigName: getPalette
        Comment: "Get the palette used by a surface."
        Return:
          Sdl: SDL_Palette
          Zig: "?pixels.Palette"
          Convert: null
          Checks:
            - Mode: ReturnNullIfEq
              ComparisonVal: null
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_AddSurfaceAlternateImage
        ZigName: addAlternateImage
        Comment: "Add an alternate version of a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: image
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_SurfaceHasAlternateImages
        ZigName: hasAlternateImage
        Comment: "Return whether a surface has alternate versions available."
        Return:
          Sdl: bool
          Zig: bool
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_RemoveSurfaceAlternateImages
        ZigName: removeAlternateImages
        Comment: "Remove all alternate versions of a surface."
        Return:
          Sdl: void
          Zig: void
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_LockSurface
        ZigName: lock
        Comment: "Set up a surface for directly accessing the pixels. Not all surfaces need locking."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_UnlockSurface
        ZigName: unlock
        Comment: "Release a surface after directly accessing the pixels."
        Return:
          Sdl: void
          Zig: void
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_LoadBMP_IO
        ZigName: initFromBmpIo
        Comment: "Create a surface from a BMP image from a seekable stream."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: stream
            Type: SDL_IOStream
            Value: null
            Mode: null
          - Name: close_stream_after
            Type: bool
            Value: null
            Mode: null
      - SdlName: SDL_LoadBMP
        ZigName: initFromBmpFile
        Comment: "Load a BMP image from a file."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: file
            Type: string
            Value: null
            Mode: null
      - SdlName: SDL_SaveBMP_IO
        ZigName: saveBmpIo
        Comment: "Save a surface to a seekable SDL data stream in BMP format."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: stream
            Type: SDL_IOStream
            Value: null
            Mode: null
          - Name: close_stream_after
            Type: bool
            Value: null
            Mode: null
      - SdlName: SDL_SaveBMP
        ZigName: saveBmpFile
        Comment: "Save a surface to a file."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: file
            Type: string
            Value: null
            Mode: null
      - SdlName: SDL_SetSurfaceRLE
        ZigName: setRLE
        Comment: "Set the RLE acceleration hint for a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: enabled
            Type: bool
            Value: null
            Mode: null
      - SdlName: SDL_SurfaceHasRLE
        ZigName: hasRLE
        Comment: "Returns whether the surface is RLE enabled."
        Return:
          Sdl: bool
          Zig: bool
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_SetSurfaceColorKey
        ZigName: setColorKey
        Comment: "Set the color key (transparent pixel) in a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: enabled
            Type: null
            Value: pixel != null
            Mode: null
          - Name: pixel
            Type: "?pixels.Pixel"
            Value: "if (pixel == null) 0 else pixel.?.value"
            Mode: verbatim
      - SdlName: SDL_SurfaceHasColorKey
        ZigName: hasColorKey
        Comment: "Returns whether the surface has a color key."
        Return:
          Sdl: bool
          Zig: bool
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_GetSurfaceColorKey
        ZigName: getColorKey
        Comment: "Get the color key (transparent pixel) for a surface."
        Return:
          Sdl: bool
          Zig: "!pixels.Pixel"
          Convert: "pixels.Pixel{ .value = ret }"
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: key
            Type: u32
            Value: "&key"
            Mode: out
      - SdlName: SDL_SetSurfaceColorMod
        ZigName: setColorMod
        Comment: "Set an additional color value multiplied into blit operations."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: color
            Type: SDL_Color
            Value: color.r
            Mode: null
          - Name: g
            Type: null
            Value: color.g
            Mode: null
          - Name: b
            Type: null
            Value: color.b
            Mode: null
      - SdlName: SDL_GetSurfaceColorMod
        ZigName: getColorMod
        Comment: "Get the additional color value multiplied into blit operations."
        Return:
          Sdl: bool
          Zig: "!pixels.Color"
          Convert: "pixels.Color{ .r = r, .g = g, .b = b }"
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: r
            Type: u8
            Value: "&r"
            Mode: out
          - Name: g
            Type: u8
            Value: "&g"
            Mode: out
          - Name: b
            Type: u8
            Value: "&b"
            Mode: out
      - SdlName: SDL_SetSurfaceAlphaMod
        ZigName: setAlphaMod
        Comment: "Set an additional alpha value used in blit operations."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: alpha
            Type: u8
            Value: null
            Mode: null
      - SdlName: SDL_GetSurfaceAlphaMod
        ZigName: getAlphaMod
        Comment: "Get the additional alpha value used in blit operations."
        Return:
          Sdl: bool
          Zig: "u8"
          Convert: "alpha"
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: alpha
            Type: u8
            Value: "&alpha"
            Mode: out
      - SdlName: SDL_SetSurfaceBlendMode
        ZigName: setBlendMode
        Comment: "Set the blend mode used for blit operations."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: mode
            Type: SDL_BlendMode
            Value: null
            Mode: null
      - SdlName: SDL_GetSurfaceBlendMode
        ZigName: getBlendMode
        Comment: "Get the blend mode used for blit operations."
        Return:
          Sdl: bool
          Zig: "!blend_mode.Mode"
          Convert: "mode"
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: mode
            Type: SDL_BlendMode
            Value: "&mode"
            Mode: out
      - SdlName: SDL_SetSurfaceClipRect
        ZigName: setClipRect
        Comment: "Set the clipping rectangle for a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: val
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
      - SdlName: SDL_GetSurfaceClipRect
        ZigName: getClipRect
        Comment: "Get the clipping rectangle for a surface."
        Return:
          Sdl: bool
          Zig: "!rect.IRect"
          Convert: rect.IRect.fromSdl(val)
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: val
            Type: SDL_Rect
            Value: "&val"
            Mode: out
      - SdlName: SDL_FlipSurface
        ZigName: flip
        Comment: "Flip a surface vertically or horizontally."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: flip_mode
            Type: ?FlipMode
            Value: if (flip_mode == null) C.SDL_FLIP_NONE else @intFromEnum(flip_mode.?)
            Mode: verbatim
      - SdlName: SDL_DuplicateSurface
        ZigName: duplicate
        Comment: "Creates a new surface identical to the existing surface."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
      - SdlName: SDL_ScaleSurface
        ZigName: scale
        Comment: "Creates a new surface identical to the existing surface, scaled to the desired size."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: width
            Type: u31
            Value: null
            Mode: null
          - Name: height
            Type: u31
            Value: null
            Mode: null
          - Name: scale_mode
            Type: SDL_ScaleMode
            Value: null
            Mode: null
      - SdlName: SDL_ConvertSurface
        ZigName: convertFormat
        Comment: "Copy an existing surface to a new surface of the specified format."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
      - SdlName: SDL_ConvertSurfaceAndColorspace
        ZigName: convertFormatAndColorspace
        Comment: "Copy an existing surface to a new surface of the specified format and colorspace."
        Return:
          Sdl: SDL_Surface
          Zig: "!Surface"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: null
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: format
            Type: SDL_PixelFormat
            Value: null
            Mode: null
          - Name: palette
            Type: ?SDL_Palette
            Value: null
            Mode: null
          - Name: colorspace
            Type: SDL_Colorspace
            Value: null
            Mode: null
          - Name: color_properties
            Type: SDL_PropertiesID
            Value: null
            Mode: null
      - SdlName: SDL_PremultiplySurfaceAlpha
        ZigName: premultiplySurfaceAlpha
        Comment: "Premultiply the alpha in a surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: linear
            Type: bool
            Value: null
            Mode: null
      - SdlName: SDL_ClearSurface
        ZigName: clear
        Comment: "Clear a surface with a specific color, with floating point precision."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: color
            Type: SDL_FColor
            Value: color.r
            Mode: null
          - Name: color
            Type: null
            Value: color.g
            Mode: null
          - Name: color
            Type: null
            Value: color.b
            Mode: null
          - Name: color
            Type: null
            Value: color.a
            Mode: null
      - SdlName: SDL_FillSurfaceRect
        ZigName: fillRect
        Comment: "Perform a fast fill of a rectangle with a specific color."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: val
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: color
            Type: SDL_Pixel
            Value: null
            Mode: null
      - SdlName: SDL_FillSurfaceRects
        ZigName: fillRects
        Comment: "Perform a fast fill of a set of rectangles with a specific color."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: rects
            Type: "[]rect.Rect(c_int)"
            Value: "@ptrCast(rects.ptr)"
            Mode: verbatim
          - Name: count
            Type: null
            Value: "@intCast(rects.len)"
            Mode: null
          - Name: color
            Type: SDL_Pixel
            Value: null
            Mode: null
      - SdlName: SDL_BlitSurface
        ZigName: blit
        Comment: "Performs a fast blit from the source surface to the destination surface."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
      - SdlName: SDL_BlitSurfaceUnchecked
        ZigName: blitUnchecked
        Comment: "Perform low-level surface blitting only, assumes surface rectangles have already been clipped."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConst
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConst
      - SdlName: SDL_BlitSurfaceScaled
        ZigName: blitScaled
        Comment: "Perform a scaled blit to a destination surface, which may be of a different format."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: scale_mode
            Type: SDL_ScaleMode
            Value: null
            Mode: null
      - SdlName: SDL_BlitSurfaceUncheckedScaled
        ZigName: blitScaledUnchecked
        Comment: "Perform low-level surface scaled blitting only, assumes surface rectangles have already been clipped."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConst
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConst
          - Name: scale_mode
            Type: SDL_ScaleMode
            Value: null
            Mode: null
      - SdlName: SDL_BlitSurfaceTiled
        ZigName: blitTiled
        Comment: "Perform a tiled blit to a destination surface, which may be of a different format."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
      - SdlName: SDL_BlitSurfaceTiledWithScale
        ZigName: blitTiledWithScale
        Comment: "Perform a scaled and tiled blit to a destination surface, which may be of a different format."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: scale_amount
            Type: f32
            Value: null
            Mode: null
          - Name: scale_mode
            Type: SDL_ScaleMode
            Value: null
            Mode: null
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
      - SdlName: SDL_BlitSurface9Grid
        ZigName: blit9Grid
        Comment: "Perform a scaled blit using the 9-grid algorithm to a destination surface, which may be of a different format."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: area_to_copy
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
          - Name: left_width
            Type: u31
            Value: null
            Mode: null
          - Name: right_width
            Type: u31
            Value: null
            Mode: null
          - Name: top_height
            Type: u31
            Value: null
            Mode: null
          - Name: bottom_height
            Type: u31
            Value: null
            Mode: null
          - Name: scale_amount
            Type: f32
            Value: null
            Mode: null
          - Name: scale_mode
            Type: SDL_ScaleMode
            Value: null
            Mode: null
          - Name: dest
            Type: SDL_Rect
            Value: null
            Mode: null
          - Name: area_to_copy_to
            Type: SDL_Rect
            Value: null
            Mode: convertSdlConstNullable
      - SdlName: SDL_MapSurfaceRGB
        ZigName: mapRgb
        Comment: "Map an RGB triple to an opaque pixel value for a surface."
        Return:
          Sdl: SDL_Pixel
          Zig: pixels.Pixel
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: r
            Type: u8
            Value: null
            Mode: null
          - Name: g
            Type: u8
            Value: null
            Mode: null
          - Name: b
            Type: u8
            Value: null
            Mode: null
      - SdlName: SDL_MapSurfaceRGBA
        ZigName: mapRgba
        Comment: "Map an RGBA quadruple to a pixel value for a surface."
        Return:
          Sdl: SDL_Pixel
          Zig: pixels.Pixel
          Convert: null
          Checks: []
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: r
            Type: u8
            Value: null
            Mode: null
          - Name: g
            Type: u8
            Value: null
            Mode: null
          - Name: b
            Type: u8
            Value: null
            Mode: null
          - Name: a
            Type: u8
            Value: null
            Mode: null
      - SdlName: SDL_ReadSurfacePixel
        ZigName: readPixel
        Comment: "Retrieves a single pixel from a surface. Is better for correctness, not speed. Best for testing."
        Return:
          Sdl: bool
          Zig: "!pixels.Color"
          Convert: ".{ .r = r, .g = g, .b = b, .a = a }"
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: x
            Type: u31
            Value: null
            Mode: null
          - Name: y
            Type: u31
            Value: null
            Mode: null
          - Name: r
            Type: u8
            Value: "&r"
            Mode: out
          - Name: g
            Type: u8
            Value: "&g"
            Mode: out
          - Name: b
            Type: u8
            Value: "&b"
            Mode: out
          - Name: a
            Type: u8
            Value: "&a"
            Mode: out
      - SdlName: SDL_ReadSurfacePixelFloat
        ZigName: readPixelFloat
        Comment: "Retrieves a single pixel from a surface. Is better for correctness, not speed. Best for testing."
        Return:
          Sdl: bool
          Zig: "!pixels.FColor"
          Convert: ".{ .r = r, .g = g, .b = b, .a = a }"
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: x
            Type: u31
            Value: null
            Mode: null
          - Name: y
            Type: u31
            Value: null
            Mode: null
          - Name: r
            Type: f32
            Value: "&r"
            Mode: out
          - Name: g
            Type: f32
            Value: "&g"
            Mode: out
          - Name: b
            Type: f32
            Value: "&b"
            Mode: out
          - Name: a
            Type: f32
            Value: "&a"
            Mode: out
      - SdlName: SDL_WriteSurfacePixel
        ZigName: writePixel
        Comment: "Writes a single pixel to a surface. Is better for correctness, not speed. Best for testing."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: x
            Type: u31
            Value: null
            Mode: null
          - Name: y
            Type: u31
            Value: null
            Mode: null
          - Name: color
            Type: SDL_Color
            Value: color.r
            Mode: null
          - Name: g
            Type: null
            Value: color.g
            Mode: null
          - Name: b
            Type: null
            Value: color.b
            Mode: null
          - Name: a
            Type: null
            Value: color.a
            Mode: null
      - SdlName: SDL_WriteSurfacePixelFloat
        ZigName: writePixelFloat
        Comment: "Writes a single pixel to a surface. Is better for correctness, not speed. Best for testing."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Mode: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: self
            Type: SDL_Surface
            Value: null
            Mode: null
          - Name: x
            Type: u31
            Value: null
            Mode: null
          - Name: y
            Type: u31
            Value: null
            Mode: null
          - Name: color
            Type: SDL_FColor
            Value: color.r
            Mode: null
          - Name: g
            Type: null
            Value: color.g
            Mode: null
          - Name: b
            Type: null
            Value: color.b
            Mode: null
          - Name: a
            Type: null
            Value: color.a
            Mode: null
    CustomFunctions:
      - Code: |
          /// Get the surface flags.
              pub fn getFlags(
                  self: Surface,
              ) Flags {
                  return Flags.fromSdl(self.value.flags);
              }
      - Code: |
          /// Get the surface format.
              pub fn getFormat(
                  self: Surface,
              ) ?pixels.Format {
                  if (self.value.format == C.SDL_PIXELFORMAT_UNKNOWN)
                      return null;
                  return pixels.Format.fromSdl(self.value.format);
              }
      - Code: |
          /// Get the surface width.
              pub fn getWidth(
                  self: Surface,
              ) u32 {
                  return @intCast(self.value.w);
              }
      - Code: |
          /// Get the surface height.
              pub fn getHeight(
                  self: Surface,
              ) u32 {
                  return @intCast(self.value.h);
              }
      - Code: |
          /// Get the byte distance between rows of pixels.
              pub fn getPitch(
                  self: Surface,
              ) u32 {
                  return @intCast(self.value.pitch);
              }
      - Code: |
          /// Get a slice to writable pixels. If the pixels are not writeable, null is returned.
              pub fn getPixels(
                  self: Surface,
              ) ?[]u8 {
                  if (self.value.pixels) |pixel|
                      return .{ .ptr = @ptrCast(pixel), .len = @intCast(self.value.h * self.value.pitch) };
                  return null;
              }
      - Code: |
          /// Get a slice including all versions of a surface. Result is to be freed.
              pub fn getImages(
                  self: Surface,
                  allocator: std.mem.Allocator,
              ) ![]Surface {
                  var num: c_int = undefined;
                  const ret = C.SDL_GetSurfaceImages(self.value, &num);
                  if (ret == null)
                      return error.SdlError;
                  defer C.SDL_free(ret);
                  const converted_ret = try allocator.alloc(Surface, @intCast(num));
                  for (converted_ret, 0..num) |surface, index| {
                      surface.value = ret[index];
                  }
                  return converted_ret;
              }
Flags:
  - Name: Flags
    Type: SDL_SurfaceFlags
    Comment: "The flags on an SDL Surface."
    Values:
      - Name: preallocated
        Type: SDL_SURFACE_PREALLOCATED
        Value: null
        Comment: "Surface uses preallocated pixel memory."
      - Name: lock_needed
        Type: SDL_SURFACE_LOCK_NEEDED
        Value: null
        Comment: "Surface needs to be locked to access pixels."
      - Name: locked
        Type: SDL_SURFACE_LOCKED
        Value: null
        Comment: "Surface is currently locked."
      - Name: simd_aligned
        Type: SDL_SURFACE_SIMD_ALIGNED
        Value: null
        Comment: "Surface uses pixel memory allocated with aligned allocator."
    Presets: []
    Functions: []
    CustomFunctions: []
StringMap: []
Structs: []
Functions: []
CustomFunctions: []
Typedefs: []
Tests: []
