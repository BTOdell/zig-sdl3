Name: power
Callbacks: []
Enums:
  - SdlType: SDL_PowerState
    ZigType: PowerState
    InternalType: c_int
    Comment: "The basic state for the system's power supply."
    Values:
      - ZigValue: Unknown
        SdlValue: $SDL.SDL_POWERSTATE_UNKNOWN
        Comment: "Can not determine power status."
      - ZigValue: OnBattery
        SdlValue: $SDL.SDL_POWERSTATE_ON_BATTERY
        Comment: "Not plugged in, running on battery."
      - ZigValue: NoBattery
        SdlValue: $SDL.SDL_POWERSTATE_NO_BATTERY
        Comment: "Plugged in, no battery available."
      - ZigValue: Charging
        SdlValue: $SDL.SDL_POWERSTATE_CHARGING
        Comment: "Plugged in, battery charging."
      - ZigValue: Charged
        SdlValue: $SDL.SDL_POWERSTATE_CHARGED
        Comment: "Plugged in, battery charged."
    Functions:
      - SdlName: SDL_GetPowerInfo
        ZigName: get
        Comment: "Get the current power supply details."
        Return:
          Sdl: SDL_PowerState
          Zig: |
            !struct { state: PowerState, seconds_left: ?u32, percent: ?u7 }
          Convert: .{ .state = ret, .seconds_left = if (seconds_left == -1) null else @intCast(seconds_left), .percent = if (percent == -1) null else @intCast(percent) }
          Checks:
            - Method: ReturnErrIfEq
              ComparisonVal: $SDL.SDL_POWERSTATE_ERROR
        Arguments:
          - Name: seconds_left
            Type: c_int
            Value: &seconds_left
            Mode: out
          - Name: percent
            Type: c_int
            Value: &percent
            Mode: out
Errors: []
Values: []
Flags: []
StringMap: []
Structs: []
Functions: []
CustomFunctions: []
Typedefs: []
Tests: []
