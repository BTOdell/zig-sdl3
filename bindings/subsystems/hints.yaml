Name: hints
Extension: false
Callbacks:
  - SdlName: SDL_HintCallback
    ZigName: Callback
    Comment: "A callback used to send notifications of hint value changes."
    Return:
      Sdl: void
      Zig: void
      Convert: null
      Checks: []
    Arguments:
      - Name: UserData
        Type: type
        Value: null
        Mode: generic
      - Name: user_data
        Type: *UserData
        Value: null
        Mode: null
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
      - Name: old_value
        Type: string
        Value: null
        Mode: null
      - Name: new_value
        Type: string
        Value: null
        Mode: null
Enums:
  - SdlType: SDL_HintPriority
    Name: Priority
    InternalType: c_uint
    Comment: "An enumeration of hint priorities."
    Values:
      - ZigValue: Default
        SdlValue: $SDL.SDL_HINT_DEFAULT
        Comment: null
      - ZigValue: Normal
        SdlValue: $SDL.SDL_HINT_NORMAL
        Comment: null
      - ZigValue: Override
        SdlValue: $SDL.SDL_HINT_OVERRIDE
        Comment: null
    Functions:
      - SdlName: SDL_SetHintWithPriority
        ZigName: setWithPriority
        Comment: "Set a hint with a specific priority. Will only set if the hint was previously set with a lower priority."
        Return:
          Sdl: bool
          Zig: "!void"
          Convert: null
          Checks:
            - Method: ReturnErrIfEq
              ComparisonVal: false
        Arguments:
          - Name: hint
            Type: SDL_Hint
            Value: null
            Mode: null
Errors: []
Values: []
Flags: []
StringMap:
  - SdlName: SDL_Hint
    ZigName: Type
    Comment: "Configuration hints for the library. May or may not be useful depending on the platform."
    Values:
      - ZigValue: AllowAltTabWhileGrabbed
        SdlValue: SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED
        Comment: "0 - Sdl does not handle Alt+Tab, 1 - Sdl will minimize window on Alt+Tab (default)."
# TODO: REST OF HINTS!!!
Structs: []
Functions:
  - SdlName: SDL_SetHintWithPriority
    ZigName: setWithPriority
    Comment: "Set a hint with a specific priority. Will only set if the hint was previously set with a lower priority."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
      - Name: value
        Type: string
        Value: null
        Mode: null
      - Name: priority
        Type: SDL_HintPriority
        Value: null
        Mode: null
  - SdlName: SDL_SetHint
    ZigName: set
    Comment: "Set a hint with normal priority."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
      - Name: value
        Type: string
        Value: null
        Mode: null
  - SdlName: SDL_ResetHint
    ZigName: reset
    Comment: "Reset a hint to its default value."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
  - SdlName: SDL_ResetHints
    ZigName: resetAll
    Comment: "Reset all hints."
    Return:
      Sdl: void
      Zig: void
      Convert: null
      Checks: []
    Arguments: []
  - SdlName: SDL_GetHint
    ZigName: get
    Comment: "Get a hint's value, or null if the hint is not set."
    Return:
      Sdl: string
      Zig: ?[]const u8
      Convert: null
      Checks:
        - Method: ReturnNullIfEq
          ComparisonVal: null
    Arguments:
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
  - SdlName: SDL_GetHintBoolean
    ZigName: getBoolean
    Comment: "Get a hint's boolean value."
    Return:
      Sdl: bool
      Zig: ?bool
      Convert: null
      Checks:
        - Method: Custom
          ComparisonVal: if (get(hint) == null) return null;
    Arguments:
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
  - SdlName: SDL_AddHintCallback
    ZigName: addCallback
    Comment: "Add a function to watch a particular hint."
    Return:
      Sdl: bool
      Zig: "!void"
      Convert: null
      Checks:
        - Method: ReturnErrIfEq
          ComparisonVal: false
    Arguments:
      - Name: UserData
        Type: type
        Value: null
        Mode: generic
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
      - Name: callback_data
        Type: SDL_HintCallback
        Value: null
        Mode: callback
  - SdlName: SDL_RemoveHintCallback
    ZigName: removeCallback
    Comment: "Remove a function to watch a particular hint."
    Return:
      Sdl: void
      Zig: void
      Convert: null
      Checks: []
    Arguments:
      - Name: UserData
        Type: type
        Value: null
        Mode: generic
      - Name: hint
        Type: SDL_Hint
        Value: null
        Mode: null
      - Name: callback_data
        Type: SDL_HintCallback
        Value: null
        Mode: callback
CustomFunctions: []
Typedefs: []
Tests: []
